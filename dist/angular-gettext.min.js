angular.module("gettext",[]),angular.module("gettext").constant("gettext",function(a){return a}),angular.module("gettext").factory("gettextCatalog",["gettextPlurals","gettextFallbackLanguage","$http","$cacheFactory","$interpolate","$rootScope",function(a,b,c,d,e,f){function g(){f.$broadcast("gettextLanguageChanged")}var h,i="$$noContext",j='<span id="test" title="test" class="tested">test</span>',k=angular.element("<span>"+j+"</span>").html()!==j,l=function(a){return h.debug&&h.currentLanguage!==h.baseLanguage?h.debugPrefix+a:a},m=function(a){return h.showTranslatedMarkers?h.translatedMarkerPrefix+a+h.translatedMarkerSuffix:a};return h={debug:!1,debugPrefix:"[MISSING]: ",showTranslatedMarkers:!1,translatedMarkerPrefix:"[",translatedMarkerSuffix:"]",strings:{},baseLanguage:"en",currentLanguage:"en",cache:d("strings"),setCurrentLanguage:function(a){this.currentLanguage=a,g()},getCurrentLanguage:function(){return this.currentLanguage},setStrings:function(b,c){this.strings[b]||(this.strings[b]={});var d=a(b,1);for(var e in c){var f=c[e];if(k&&(e=angular.element("<span>"+e+"</span>").html()),angular.isString(f)||angular.isArray(f)){var h={};h[i]=f,f=h}this.strings[b][e]||(this.strings[b][e]={});for(var j in f){var l=f[j];angular.isArray(l)?this.strings[b][e][j]=l:(this.strings[b][e][j]=[],this.strings[b][e][j][d]=l)}}g()},getStringFormFor:function(b,c,d,e){if(!b)return null;var f=this.strings[b]||{},g=f[c]||{},h=g[e||i]||[];return h[a(b,d)]},getString:function(a,c,d){var e=b(this.currentLanguage);return a=this.getStringFormFor(this.currentLanguage,a,1,d)||this.getStringFormFor(e,a,1,d)||l(a),m(a)},getPlural:function(a,c,d,f,g){var h=b(this.currentLanguage);return c=this.getStringFormFor(this.currentLanguage,c,a,g)||this.getStringFormFor(h,c,a,g)||l(1===a?c:d),f&&(f.$count=a,c=e(c)(f)),m(c)},loadRemote:function(a){return c({method:"GET",url:a,cache:h.cache}).then(function(a){var b=a.data;for(var c in b)h.setStrings(c,b[c]);return a})}}}]),angular.module("gettext").directive("translate",["gettextCatalog","$parse","$animate","$compile","$interpolate","$window","gettextUtil",function(a,b,c,d,e,f,g){function h(a){return g.lcFirst(a.replace(l,""))}function i(a){return g.lcFirst(a.replace(m,""))}function j(a,b,c){var d=Object.keys(b).filter(function(a){return g.startsWith(a,l)&&a!==l}),e=Object.keys(b).filter(function(a){return g.startsWith(a,m)&&a!==m});if(n=[],!d.length&&!e.length)return null;var f=a.$new(),j=[];return d.forEach(function(d){var e=a.$watch(b[d],function(a){var b=h(d);f[b]=a,c(f)});j.push(e)}),e.forEach(function(d){var e=a.$watch(b[d],function(a){var b=i(d);f[b]=a,n.push(b),c(f)});j.push(e)}),a.$on("$destroy",function(){j.forEach(function(a){a()}),f.$destroy()}),f}var k=parseInt((/msie (\d+)/.exec(angular.lowercase(f.navigator.userAgent))||[])[1],10),l="translateParams",m="translateHtmlParams",n=[];return{restrict:"AE",terminal:!0,compile:function(f,h){g.assert(!h.translatePlural||h.translateN,"translate-n","translate-plural"),g.assert(!h.translateN||h.translatePlural,"translate-plural","translate-n");var i=g.trim(f.html()),l=h.translatePlural,m=h.translateContext;return k<=8&&"<!--IE fix-->"===i.slice(-13)&&(i=i.slice(0,-13)),{post:function(f,h,k){function o(b){b=b||null;var j;l?(f=q||(q=f.$new()),f.$count=p(f),j=a.getPlural(f.$count,i,l,null,m)):j=a.getString(i,null,m);var k=h.contents();if(k||j){if(j===g.trim(k.html()))return void(r&&d(k)(f));var o=new RegExp(/\{\{\s*(.*?)?\s*\}\}/g);j=j.replace(o,function(a,c){return n.indexOf(c)>=0?e("{{ "+c+" }}")(b):a});var s=angular.element("<span>"+j+"</span>");d(s.contents())(b||f);var t=s.contents();c.enter(t,h),c.leave(k)}}var p=b(k.translateN),q=null,r=!0,s=j(f,k,o);o(s),r=!1,k.translateN&&f.$watch(k.translateN,function(){o(s)}),f.$on("gettextLanguageChanged",function(){o(s)})}}}}}]),angular.module("gettext").factory("gettextFallbackLanguage",function(){var a={},b=/([^_]+)_[^_]+$/;return function(c){if(a[c])return a[c];var d=b.exec(c);return d?(a[c]=d[1],d[1]):null}}),angular.module("gettext").filter("translate",["gettextCatalog",function(a){function b(b,c){return a.getString(b,null,c)}return b.$stateful=!0,b}]),angular.module("gettext").factory("gettextPlurals",function(){function a(a){return b[a]||(b[a]=a.split(/\-|_/).shift()),b[a]}var b={pt_BR:"pt_BR","pt-BR":"pt_BR"};return function(b,c){switch(a(b)){case"ay":case"bo":case"cgg":case"dz":case"fa":case"id":case"ja":case"jbo":case"ka":case"kk":case"km":case"ko":case"ky":case"lo":case"ms":case"my":case"sah":case"su":case"th":case"tt":case"ug":case"vi":case"wo":case"zh":return 0;case"is":return c%10!=1||c%100==11?1:0;case"jv":return 0!=c?1:0;case"mk":return 1==c||c%10==1?0:1;case"ach":case"ak":case"am":case"arn":case"br":case"fil":case"fr":case"gun":case"ln":case"mfe":case"mg":case"mi":case"oc":case"pt_BR":case"tg":case"ti":case"tr":case"uz":case"wa":case"zh":return c>1?1:0;case"lv":return c%10==1&&c%100!=11?0:0!=c?1:2;case"lt":return c%10==1&&c%100!=11?0:c%10>=2&&(c%100<10||c%100>=20)?1:2;case"be":case"bs":case"hr":case"ru":case"sr":case"uk":return c%10==1&&c%100!=11?0:c%10>=2&&c%10<=4&&(c%100<10||c%100>=20)?1:2;case"mnk":return 0==c?0:1==c?1:2;case"ro":return 1==c?0:0==c||c%100>0&&c%100<20?1:2;case"pl":return 1==c?0:c%10>=2&&c%10<=4&&(c%100<10||c%100>=20)?1:2;case"cs":case"sk":return 1==c?0:c>=2&&c<=4?1:2;case"sl":return c%100==1?1:c%100==2?2:c%100==3||c%100==4?3:0;case"mt":return 1==c?0:0==c||c%100>1&&c%100<11?1:c%100>10&&c%100<20?2:3;case"gd":return 1==c||11==c?0:2==c||12==c?1:c>2&&c<20?2:3;case"cy":return 1==c?0:2==c?1:8!=c&&11!=c?2:3;case"kw":return 1==c?0:2==c?1:3==c?2:3;case"ga":return 1==c?0:2==c?1:c<7?2:c<11?3:4;case"ar":return 0==c?0:1==c?1:2==c?2:c%100>=3&&c%100<=10?3:c%100>=11?4:5;default:return 1!=c?1:0}}}),angular.module("gettext").factory("gettextUtil",function(){function a(a,b,c){if(!a)throw new Error("You should add a "+b+" attribute whenever you add a "+c+" attribute.")}function b(a,b){return 0===a.indexOf(b)}function c(a){var b=a.charAt(0).toLowerCase();return b+a.substr(1)}var d=function(){return String.prototype.trim?function(a){return"string"==typeof a?a.trim():a}:function(a){return"string"==typeof a?a.replace(/^\s*/,"").replace(/\s*$/,""):a}}();return{trim:d,assert:a,startsWith:b,lcFirst:c}});